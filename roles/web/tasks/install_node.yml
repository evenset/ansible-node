---



- name: Ensure distribution NodeJS is not installed
  tags:
    - nodejs
  apt: name={{ item }} state=absent
  with_items:
    - nodejs
    - nodejs-legacy
    - npm

- name: Download NodeJS bundle
  command: "curl -O {{ item }}"
  args:
    chdir: "/usr/local"
    creates: "/usr/local/{{ nodejs_archive_file }}"
  with_items:
    - "https://nodejs.org/dist/v{{ nodejs_current_version }}/{{ nodejs_archive_file }}"
    - "https://nodejs.org/dist/v{{ nodejs_current_version }}/SHASUMS256.txt"

- name: Verify NodeJS download
  command: "sha256sum -c --strict --ignore-missing SHASUM256.txt"
  args:
    chdir: "/usr/local"
    creates: "/usr/local/{{ nodejs_archive_file }}"

- name: Unpack downloaded NodeJS archive
  unarchive:
    creates: "/usr/local/nodejs-{{ nodejs_current_version }}"
    copy: no
    dest: "/usr/local"
    group: root
    owner: root
    src: "/usr/local/{{ nodejs_archive_file }}"

- name: Make sure the "npm_modules" directory exists
  file: path=/usr/local/lib/node_modules state=directory mode="u=rwX,g=rX,o=rX"

- name: Copy the current NodeJS binary
  copy:
    dest: "/usr/local/bin/node"
    mode: u=rx,g=rx,o=rx
    remote_src: yes
    src: "/usr/local/node-v{{ nodejs_current_version }}-linux-x64/bin/node"

- name: Copy the current NodeJS directories
  command: "cp -r /usr/local/node-v{{ nodejs_current_version }}-linux-x64/{{ item }} /usr/local/{{ item }}"
  with_items:
    - "include/node"
    - "lib/node_modules/npm"

- name: Link the current NPM executable
  file:
    dest: /usr/local/bin/npm
    mode: u=rx,g=rx,o=rx
    src: /usr/local/lib/node_modules/npm/bin/npm-cli.js
    state: link

- name: Remove previous versions of NodeJS
  file: dest={{ item }} state=absent
  with_items: "{{ nodejs_previous_versions }}"
